GIT FUNDAMENTALS


DOLLY GOOD

	git clone [clone-url-from-github-site] [optional-destination-folder]

	# clones live repo to local machine


ONE DOES NOT SIMPLY PUSH TO MASTER

	git checkout -b [name-of-new-branch]

	# branches off of master to avoid trying to update it directly which would be a Super Bad Time
	# (alternatively, do git branch [name] then git checkout [name] in 2 steps but seems needless)


ALL THE WORLD'S A STAGE...

	# Make changes as needed (e.g. vim notes.txt or whatever) then...

	git add [filename]
	# ... to add a single to staging OR ALTERNATIVELY...
	
	git add -A
	# ... or...
	git add .
	# ... to add all changes to staging.


PUSH THE BUTTON

	git commit -m "[commit-message]"
	# commits staged changes with a note to describe the changes (e.g. "Updated readme" or whatever)

	git status
	# checks everything is committed and ready

	git push --set-upstream origin [branch-name]
	# assigns upstream to branch as opposed to master, then pushes changes to branch


BUT IS EVERYTHING FUCKED NOW?

	# If the local copy isn't up to date with the original then you're up Schitt's Creek sans paddle
	# so check it and see...

	git checkout master
	git pull

	# Any changes will be listed in output. If there are changes, you need to merge those into your branch:

	git checkout [branch-name]
	git merge master	

	# Hopefully there aren't any merge conflicts. If there are, hulk smash. Basically you'll want to try to
	# resolve them with a restage and recommit. Then, repeat the push command. Otherwise, there's no need
	# because they'll get merged automatically with your commit without conflicts when your pull request
	# goes through.


PULL THE OTHER ONE

	# This is done on the Github site interface rather than through command line.
	# Navigate to the repo, then the "Pull requests" tab, and hit "New pull request".


...


FORKING HELL MATE

	git remote -v
	# states what URLs you can push to (starts with origin)

	git remote add upstream MAIN(beforefork)URLHERE

	# but then you could push to the main branch instead of your fork which could be bad (might not have permission)
	# so you'll want to switch that off

	git remote set-url --push URLGOESHERE
